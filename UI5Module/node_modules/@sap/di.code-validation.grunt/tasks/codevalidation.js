'use strict';
var path = require("path");
var webide_codevalidation = require('@sap/di.code-validation.core').validation;
var ValidationConfig = require('@sap/di.code-validation.core').ValidationConfig;
var fs = require("fs");
var defaultReporter = require("../src/reporters/problems_reporter");

module.exports = function (grunt) {
    grunt.registerMultiTask('codevalidation', 'Validate project', function () {
        var done = this.async();

        var options =  this.options();
        try {
            var validationProvidersConfig;

            if (grunt.option('validationConfigPath')){
                validationProvidersConfig = JSON.parse(fs.readFileSync(grunt.option('validationConfigPath')).toString());
            } else{
                options.ignoredPaths = options.ignoredPaths || [];
                if (options.ignoredPaths.indexOf(path.join(process.cwd(), "node_modules")) < 0) {
                    options.ignoredPaths.push(path.join(process.cwd(), "node_modules"));
                }
                validationProvidersConfig = {
                    ignoredPaths: options.ignoredPaths,
                    validators: options.validators
                };
            }
            var config = new ValidationConfig(validationProvidersConfig);
            var reporter = defaultReporter;
            if (options.reporter && options.reporter !== "problems_reporter") {
                reporter = require(options.reporter);
            }
            webide_codevalidation.executeForProject(options.projectPath, {pathPrefix: options.pathPrefix}, config, function(result) {
                try {
                    console.log("execution complete with result: " + JSON.stringify(result));
                    reporter.report(result, options.reporterOptions);
                } catch (err) {
                    grunt.fail.warn(err);
                }
                done();
            });

        } catch (err) {
            grunt.fail.warn(err);
            return false;
        }
    });
};


